#!/usr/bin/env resty
local sContainerName = 'ex'
local sAddress, sMsg = require('grantmacken.resolve').getAddress( sContainerName )
ngx.log( ngx.INFO, sMsg )
ngx.say( sMsg )
local httpc = require("resty.http").new()
ok, err = httpc:connect(sAddress,8080)
if not ok then
  ngx.say("ERR: Failed to connect ", err)
  ngx.exit()
end
ngx.say(' - connected to '  .. sAddress ..  ' on port  8080')
local restPath = '/exist/rest/db/apps/'
ngx.say( ' - restPath'  .. restPath)
if not os.getenv("EXIST_AUTH") then
  ngx.say( ' -failed to get EXIST AUTH')
  ngx.exit()
end
local auth = 'Basic ' .. os.getenv("EXIST_AUTH")

local xQuery = [[
<query xmlns="http://exist.sourceforge.net/NS/exist"
 start='1'
 max='9999'
 wrap="no">
<text>
<![CDATA[
xquery version "3.1";
try{
 let $nl := "&#10;"
 return(
 ' version: ' || system:get-version() || $nl ,
 '   build:  ' || system:get-build() || $nl ,
 ' revision: ' || system:get-revision() || $nl ,
 '     home: ' || system:get-exist-home() || $nl ,
 'repo root: ' || repo:get-root() || $nl ,
 '   max memory eXist can use: ' || system:get-memory-max() || $nl ,
 '        total memory in use: ' || system:get-memory-total() || $nl ,
 '      free memory available: ' || system:get-memory-free() || $nl ,
 '       request: ' || request:exists()  || $nl,
 '    host-name : ' || request:get-hostname()  || $nl,
 '       method : ' || request:get-method()  || $nl,
 ' effective-uri: ' || request:get-effective-uri()  || $nl,
 '  remote-addr : ' || request:get-remote-addr()  || $nl,
 '  remote-host : ' || request:get-remote-host()  || $nl,
 '  remote-port : ' || request:get-remote-port()  || $nl,
 '  server-name : ' || request:get-server-name()  || $nl,
 '  servlet-path : ' || request:get-servlet-path()  || $nl,
 '  remote-scheme : ' || request:get-scheme()  || $nl,
 '  multipart-content : ' || request:is-multipart-content()  || $nl,
 '  uri : ' || request:get-uri()  || $nl,
 '  url : ' || request:get-url()  || $nl,
 '  path-info : ' || request:get-path-info()  || $nl,
 '  context-path : ' || request:get-context-path()  || $nl,
 '  attribute-names : ' ||  request:attribute-names() || $nl,
 '        current-user: ' || xmldb:get-current-user()  || $nl,
 ' is current user dba: ' || sm:is-dba(xmldb:get-current-user()) || $nl ,
 '    is-authenticated: ' || sm:is-authenticated() || $nl ,
 $nl
)
} catch * {()}
]] ..']]>' .. [[
</text>
</query>
]]

local req = {
  version = 1.1,
  method = "POST",
  path = restPath,
  headers = {
    ["Content-Type"] =  'application/xml',
    ["Authorization"] = auth
  },
  body = xQuery
}
local res =  httpc:request( req )
local oBody
if res.has_body then
  local sBody, err = res:read_body()
  if not sBody then
    ngx.say("ERR: failed to read_body: ", err)
    ngx.say(' - exiting ... '  )
    ngx.exit()
  end
  if sBody ~= '' then
    ngx.say( sBody )
  end
end



